components and features used in the Orders page

1.Core Technologies & Libraries:
   import React, { useState, useMemo } from 'react';
   import { Material-UI components }

2.Main Components Used:
   // Material-UI Components
   import {
     Box,            // Flexible container
     Paper,          // Surface component
     Typography,     // Text elements
     TextField,      // Search input
     Table,          // Orders table
     Select,         // Dropdown selects
     Chip,           // Status badges
     Grid,          // Layout system
     Collapse,       // Expandable sections
     IconButton,     // Icon buttons
     Button,         // Action buttons
   }

   // Icons Used
   import {
     SearchIcon,
     KeyboardArrowDownIcon,
     ContentCopyIcon,
     ExpandMoreIcon,
   }

3.Data Structures:
   // Order Interface
   interface Order {
     store: string;
     orderNo: string;
     customer: {
       name: string;
       id: string;
       email: string;
       phone: string;
     };
     discount: string | null;
     channel: string;
     paymentType: string;
     total: string;
     dateTime: string;
     shipping: {
       method: string;
       address: string;
     };
     payment: {
       method: string;
       subtotal: string;
       shipping: string;
       tax: string;
     };
     items: OrderItem[];
   }

   // Order Item Interface
   interface OrderItem {
     image: string;
     name: string;
     quantity: number;
     price: string;
     total: string;
   }

4.Page Structure:
   // Header
   - "Orders" title

   // Filters Section
   - Search bar
   - Store filter
   - Payment Methods filter
   - Sales Channels filter

   // Orders Table
   - Expandable rows
   - Order details
   - Customer information
   - Payment details

5.Features Implemented:
   // State Management
   const [searchTerm, setSearchTerm] = useState('');
   const [selectedStore, setSelectedStore] = useState('');
   const [selectedPayment, setSelectedPayment] = useState('');
   const [selectedChannel, setSelectedChannel] = useState('');
   const [isFiltersExpanded, setIsFiltersExpanded] = useState(true);
   const [expandedOrder, setExpandedOrder] = useState<string | null>(null);

   // Filtering Logic
   const filteredOrders = useMemo(() => {
     return mockOrders.filter(order => {
       // Search filter
       const searchLower = searchTerm.toLowerCase();
       const matchesSearch = searchTerm === '' || 
         order.orderNo.toLowerCase().includes(searchLower) ||
         order.customer.name.toLowerCase().includes(searchLower);

       // Filter combinations
       const matchesStore = selectedStore === '' || order.store === selectedStore;
       const matchesPayment = selectedPayment === '' || order.paymentType === selectedPayment;
       const matchesChannel = selectedChannel === '' || order.channel === selectedChannel;

       return matchesSearch && matchesStore && matchesPayment && matchesChannel;
     });
   }, [searchTerm, selectedStore, selectedPayment, selectedChannel]);

6.UI Components:
   // Filter Section
   <Paper>
     <Box> {/* Filter Header */}
     <Collapse> {/* Expandable Filter Content */}
       <TextField /> {/* Search */}
       <Select /> {/* Store Filter */}
       <Select /> {/* Payment Filter */}
       <Select /> {/* Channel Filter */}
     </Collapse>
   </Paper>

   // Orders Table
   <TableContainer>
     <Table>
       <TableHead>
         <TableRow>
           {/* Column Headers */}
         </TableRow>
       </TableHead>
       <TableBody>
         {/* Expandable Order Rows */}
       </TableBody>
     </Table>
   </TableContainer>


7.Expandable Row Features:
   // Order Row Content
   - Basic order information
   - Customer details
   - Shipping information
   - Payment details
   - Order items list
   - Status indicators

8.Visual Elements:
   // Status Chips
   <Chip
     label={order.discount ? order.discount : '-'}
     sx={{
       backgroundColor: '#e3f2fd',
       color: '#1976d2',
     }}
   />

   // Order Items Table
   - Product images
   - Quantity
   - Price calculations
   - Totals

9.User Experience Features:
.Expandable/collapsible filters
.Real-time search filtering
.Multiple filter combinations
.Detailed order information
.Clean, organized layout
.Responsive design
.Interactive elements

10.Pagination:
    // Pagination Controls
    <Box>
      <Typography>
        Showing {filteredOrders.length} of {mockOrders.length} orders
      </Typography>
      <Button>Previous</Button>
      <Button>1</Button>
      <Button>Next</Button>
    </Box>

11.Best Practices Used:
.TypeScript for type safety
.Modular component structure
.Memoized filtering for performance
.Consistent styling
.Responsive design patterns
.Clear visual hierarchy



